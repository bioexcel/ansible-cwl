---
# Tasks to install and configure galaxy on Centos 7 or similar

- name: Add Yarn repository
  yum_repository:
    # Adapted from https://dl.yarnpkg.com/rpm/yarn.repo 2019-07-12
    name: yarn
    description: YARN Repository
    baseurl: https://dl.yarnpkg.com/rpm/
    gpgcheck: yes
    gpgkey: https://dl.yarnpkg.com/rpm/pubkey.gpg    
  become: yes


# Install EPEL repo, needed for pip and other packages.

- name: Install EPEL
  yum:
    name: ['epel-release']
    state: present
  become: yes

- name: Upgrade all packages
  yum:
    name: '*'
    state: latest
  become: yes

- name: Install python dependencies
  yum:
    name: [python36-pip, python36-devel, python36, gcc, make, python36-virtualenv, postgresql-devel, yarn, bzip2, git, docker]
  notify: "restart galaxy" # in case something upgrades
  become: yes

- name: Ensure group "galaxy" exists
  group:
    name: galaxy
  become: yes


- name: Ensure user "galaxy" exist
  user:
    name: galaxy
    comment: Galaxy server
    home: /app
  become: yes

- name: Clone galaxy repo
  notify: "restart galaxy"
  git:
    repo: 'https://github.com/common-workflow-language/galaxy.git'
    dest: /app/galaxy
  become: yes
  become_user: galaxy
  become_method: sudo # as with su galaxy must have same as root password!

# Clone workflow-is-cwl repo:
- name: Clone workflow-is-cwl repo.
  git:
    repo: 'https://github.com/EBI-metagenomics/workflow-is-cwl'
    dest: /app/workflow-is-cwl
  become: yes
  become_user: galaxy
  become_method: sudo # as with su galaxy must have same as root password!

- name: Ensure galaxy still owns home directory
  file: 
    path: /app # ~galaxy
    group: galaxy
    owner: galaxy
    mode: u+rwX,g+rwX,o+rX

- name: Create cwl tools directory
  file:
    path: /app/galaxy/lib/galaxy/tools/cwl/
    state: directory
    owner: galaxy
    group: galaxy
  become: yes  

# Pre-install galaxy dependencies using virtualenv
# NOTE: Galaxy will also do this from run.sh
# when started as a service, we do this before to
# simplify service startup and detect any missing
# native dependencies.
# TODO: There is a risk that this may update a galaxy
# that is already running, but this problem
# also exist with the git clone update above

- name: Install Galaxy dependencies
  notify: "restart galaxy"
  pip:
    virtualenv_command: virtualenv-3.6
    requirements: /app/galaxy/requirements.txt
    virtualenv: /app/galaxy/.venv
    # update from /app/galaxy/scripts/common_startup.sh b
    # for GALAXY_WHEELS_INDEX_URL and PYPI_INDEX_URL
    extra_args:  --index-url "https://wheels.galaxyproject.org/simple" --extra-index-url "https://pypi.python.org/simple"
  become: yes
  become_user: galaxy
  become_method: sudo # as with su galaxy must have same as root password!

- name: Copy Galaxy files
  copy: src={{ item }} dest=/{{ item }}
  with_items:
   - 'app/galaxy/lib/galaxy/tools/cwl/representation.py' # Good
   - 'app/galaxy/lib/galaxy/tools/cwl/parser.py' # Good
   - 'app/galaxy/config/job_conf.xml' # Good
   - 'app/galaxy/config/dependency_resolvers_conf.xml' # Goof
   - 'app/galaxy/config/galaxy.yml' # Good
   - 'app/galaxy/config/tool_conf.xml' # Good
   - 'app/galaxy/static/welcome.html' # Good
   - 'app/start.sh' # Good
   - 'app/workflow-is-cwl/tools/Diamond/Diamon.makedb-v0.9.21.cwl' # Good
   - 'app/upload_material.py' # Good
   - 'app/start_galaxy_and_upload_material.sh' # Good
   - 'app/galaxy/create_user.py'
#   - 'app/galaxy/lib/galaxy/managers/workflows.py'  # Minor changes in different orders to main
#   - 'app/galaxy/.venv/lib/python3.6/site-packages/cwltool/process.py' # Causes Error #Seems to contain print statements only.
#   - 'app/galaxy/lib/galaxy/tools/wrappers.py' # Causes Erro
  become: yes

# Make and start a systemd service
- name: Add galaxy service
  copy:
    src: galaxy.service    
    # FIXME: This seems like a quite Centos-specific directory
    dest: /etc/systemd/system/network-online.target.wants/
    owner: root
    group: root
    mode: 0644
  become: yes


- name: Make sure docker is running
  systemd:
    state: started
    name: docker  
  become: yes


- name: Make sure galaxy is running
  systemd:
   # TODO: use Ansible handler script to force "restarted" if any of the above changed the install
    state: started 
    name: galaxy  
    daemon_reload: true # we might just have installed the service above
  become: yes


# TODO: install and enable galaxy.service for firewalld  
# into /etc/firewalld/services and enable it with cmd-firewalld
# equivalent so that :8080 is open
# see https://docs.ansible.com/ansible/latest/modules/firewalld_module.html#firewalld-module

- firewalld:
    port: 8080/tcp # Galaxy
    permanent: yes
    state: enabled

## TODO: Follow more of guidelines from 
# https://docs.galaxyproject.org/en/latest/admin/production.html 
# e.g. using postgresql database

## TODO: Integrate more of Galaxy setup to simplify 
## service startup from run.sh

#Startup commands:
#-name:commonstartup
#command:cd/app/galaxy&&./scripts/common_startup.sh

#-name:createdb
#command:cd/app/galaxy&&./create_db.sh

#-name:managaedb
#command:cd/app/galaxy&&./manage_db.shupgrade


